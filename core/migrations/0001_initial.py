# Generated by Django 3.1.1 on 2020-11-24 05:29

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=32, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=32, verbose_name='Фамилия')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=12, region=None, verbose_name='Номер телефона')),
                ('company_name', models.CharField(blank=True, max_length=64, verbose_name='Название компании')),
                ('addresses', models.JSONField()),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('notification', models.CharField(blank=True, max_length=256, verbose_name='Уведомление')),
                ('is_receiving_news', models.BooleanField(default=False)),
                ('is_company', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addresses', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), size=None, verbose_name='Список адресов')),
                ('inn', models.CharField(max_length=12, verbose_name='ИНН')),
                ('company_files', models.FileField(blank=True, max_length=50, upload_to='company_files/', verbose_name='Документы')),
                ('moderator_message', models.CharField(blank=True, max_length=256, verbose_name='Сообщение для пользователя')),
                ('notification', models.CharField(blank=True, max_length=256, verbose_name='Уведомление')),
                ('is_verification', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(verbose_name='Общая стоимость')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
                ('category', models.IntegerField(choices=[(1, 'Продукция с переплётом'), (2, 'Флаеры, открытки и плакаты'), (3, 'Календари'), (4, 'Офисное'), (5, 'Рекламная'), (6, 'Для гастрономии и событий')])),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
                ('price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characteristics', models.JSONField()),
                ('design', models.FileField(max_length=50, upload_to='design_product/')),
                ('count', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characteristics', models.JSONField(verbose_name='Характеристики')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company', verbose_name='Компания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product', verbose_name='Продукт')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCharacteristics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format', models.JSONField(null=True, verbose_name='Формат')),
                ('color', models.JSONField(null=True, verbose_name='Цвет')),
                ('material', models.JSONField(null=True, verbose_name='Материал')),
                ('rounding', models.JSONField(null=True, verbose_name='Скругление')),
                ('adhesive_side', models.JSONField(null=True, verbose_name='Клейкая сторона')),
                ('sheets_count', models.JSONField(null=True, verbose_name='Количество листов')),
                ('sheets_arrangement', models.JSONField(null=True, verbose_name='Расположение листов')),
                ('protective_film', models.JSONField(null=True, verbose_name='Защитная плёнка')),
                ('spiral_color', models.JSONField(null=True, verbose_name='Цвет спирали')),
                ('finishing', models.JSONField(null=True, verbose_name='Отделка')),
                ('paper', models.JSONField(null=True, verbose_name='Бумага')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.product', verbose_name='Продукт')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characteristics', models.JSONField(verbose_name='Характеристики')),
                ('design_url', models.CharField(max_length=128, verbose_name='Ссылка на дизайн')),
                ('total_count', models.IntegerField(verbose_name='Общее количество товара')),
                ('price', models.IntegerField(verbose_name='Стоимость')),
                ('count_and_address', models.JSONField(verbose_name='Адреса доставки и количество товара')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderExecutionProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_products', models.JSONField()),
                ('price', models.IntegerField(verbose_name='Стоимость')),
                ('is_partially', models.BooleanField(default=False, verbose_name='Частичное выполнение')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_products', models.JSONField()),
                ('price', models.IntegerField(verbose_name='Стоимость')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_and_deadline', models.JSONField(verbose_name='Адреса доставки и сроки')),
                ('comment', models.CharField(blank=True, max_length=1024, verbose_name='Комментарий')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(1, 'Новый заказ'), (2, 'Ожидание оплаты'), (3, 'Отправка'), (4, 'В пути'), (5, 'Прибыл')])),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.order')),
            ],
        ),
        migrations.CreateModel(
            name='OldOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('context', models.IntegerField(choices=[(1, 'Завершён'), (2, 'Окончание времени'), (3, 'Отмена компанией'), (4, 'Отмена клиентом')])),
                ('datetime', models.DateTimeField()),
                ('completion_date', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
